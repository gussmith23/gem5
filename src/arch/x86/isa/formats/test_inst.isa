output header {{
#include <iostream>

    using namespace std;
        class TestInst : public MipsStaticInst
        {
                protected:

                /// Constructor
                TestInst(const char *mnem, MachInst _machInst,
                            OpClass __opClass) :
                                MipsStaticInst(mnem, _machInst, __opClass)
                {
                }

                std::string generateDisassembly(Addr pc,
                                                const SymbolTable *symtab)
                                                const;
        };
}};

output decoder {{
        std::string TestInst::generateDisassembly(Addr pc,
                                                  const SymbolTable *symtab)
                                                  const
        {
            std::stringstream ss;

            ccprintf(ss, "%-10s ", mnemonic);

            return ss.str();
        }
}};

def format TestInst(code, *opt_flags) {{
    iop = InstObjParams(name, Name, 'TestInst', code, opt_flags)
    header_output = BasicDeclare.subst(iop)
    decoder_output = BasicConstructor.subst(iop)
    decode_block = BasicDecode.subst(iop)
    exec_output = BasicExecute.subst(iop)
}};
